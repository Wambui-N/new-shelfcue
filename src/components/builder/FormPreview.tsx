"use client";

import { motion } from "framer-motion";
import { AlertCircle, CheckCircle } from "lucide-react";
import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Checkbox } from "@/components/ui/checkbox";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { MeetingTimePicker } from "@/components/ui/meeting-time-picker";
import { Textarea } from "@/components/ui/textarea";
import { availableFonts, getFontFamily } from "@/lib/fonts";
import type { FormData } from "@/types/form";

interface FormPreviewProps {
  formData: FormData;
  onSubmit?: (data: Record<string, any>) => void;
}

export function FormPreview({ formData, onSubmit }: FormPreviewProps) {
  const [formValues, setFormValues] = useState<Record<string, any>>({});
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<
    "idle" | "success" | "error"
  >("idle");

  // Load Google Font if needed
  useEffect(() => {
    if (formData.theme.fontFamily) {
      const font = availableFonts.find(
        (f) => f.value === formData.theme.fontFamily,
      );
      if (font?.type === "google") {
        const link = document.querySelector(
          `link[data-font="${formData.theme.fontFamily}"]`,
        );
        if (!link) {
          const newLink = document.createElement("link");
          newLink.href = `https://fonts.googleapis.com/css2?family=${formData.theme.fontFamily.replace(/\s+/g, "+")}:300,400,500,600,700&display=swap`;
          newLink.rel = "stylesheet";
          newLink.setAttribute("data-font", formData.theme.fontFamily);
          document.head.appendChild(newLink);
        }
      }
    }
  }, [formData.theme.fontFamily]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!onSubmit) return;

    setIsSubmitting(true);
    try {
      await onSubmit(formValues);
      setSubmitStatus("success");
    } catch (error) {
      setSubmitStatus("error");
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleInputChange = (fieldId: string, value: any) => {
    setFormValues((prev) => ({ ...prev, [fieldId]: value }));
  };

  const renderField = (field: any) => {
    const inputStyle = {
      borderRadius: `${formData.theme.borderRadius}px`,
      backgroundColor: formData.theme.backgroundColor,
      color: formData.theme.textColor,
      borderColor: formData.theme.textColor + "30",
    };

    const commonProps = {
      id: field.id,
      required: field.required,
      placeholder: field.placeholder,
      className: "w-full",
      style: inputStyle,
    };

    switch (field.type) {
      case "text":
      case "email":
      case "phone":
        return (
          <Input
            {...commonProps}
            type={field.type}
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
          />
        );

      case "url":
        return (
          <Input
            {...commonProps}
            type="url"
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
          />
        );

      case "email_field":
        return (
          <Input
            {...commonProps}
            type="email"
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
          />
        );

      case "phone_field":
        return (
          <Input
            {...commonProps}
            type="tel"
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
            placeholder="+1 (555) 123-4567"
          />
        );

      case "country":
        return (
          <select
            {...commonProps}
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
            className="w-full px-3 py-2 border rounded-md bg-background"
            style={{
              borderColor: formData.theme.primaryColor + "40",
              color: formData.theme.textColor,
            }}
          >
            <option value="">Select your country...</option>
            <option value="US">ğŸ‡ºğŸ‡¸ United States</option>
            <option value="CA">ğŸ‡¨ğŸ‡¦ Canada</option>
            <option value="GB">ğŸ‡¬ğŸ‡§ United Kingdom</option>
            <option value="AU">ğŸ‡¦ğŸ‡º Australia</option>
            <option value="DE">ğŸ‡©ğŸ‡ª Germany</option>
            <option value="FR">ğŸ‡«ğŸ‡· France</option>
            <option value="IT">ğŸ‡®ğŸ‡¹ Italy</option>
            <option value="ES">ğŸ‡ªğŸ‡¸ Spain</option>
            <option value="NL">ğŸ‡³ğŸ‡± Netherlands</option>
            <option value="SE">ğŸ‡¸ğŸ‡ª Sweden</option>
            <option value="NO">ğŸ‡³ğŸ‡´ Norway</option>
            <option value="DK">ğŸ‡©ğŸ‡° Denmark</option>
            <option value="FI">ğŸ‡«ğŸ‡® Finland</option>
            <option value="CH">ğŸ‡¨ğŸ‡­ Switzerland</option>
            <option value="AT">ğŸ‡¦ğŸ‡¹ Austria</option>
            <option value="BE">ğŸ‡§ğŸ‡ª Belgium</option>
            <option value="IE">ğŸ‡®ğŸ‡ª Ireland</option>
            <option value="NZ">ğŸ‡³ğŸ‡¿ New Zealand</option>
            <option value="JP">ğŸ‡¯ğŸ‡µ Japan</option>
            <option value="KR">ğŸ‡°ğŸ‡· South Korea</option>
            <option value="SG">ğŸ‡¸ğŸ‡¬ Singapore</option>
            <option value="HK">ğŸ‡­ğŸ‡° Hong Kong</option>
            <option value="IN">ğŸ‡®ğŸ‡³ India</option>
            <option value="CN">ğŸ‡¨ğŸ‡³ China</option>
            <option value="BR">ğŸ‡§ğŸ‡· Brazil</option>
            <option value="MX">ğŸ‡²ğŸ‡½ Mexico</option>
            <option value="AR">ğŸ‡¦ğŸ‡· Argentina</option>
            <option value="CL">ğŸ‡¨ğŸ‡± Chile</option>
            <option value="CO">ğŸ‡¨ğŸ‡´ Colombia</option>
            <option value="PE">ğŸ‡µğŸ‡ª Peru</option>
            <option value="ZA">ğŸ‡¿ğŸ‡¦ South Africa</option>
            <option value="NG">ğŸ‡³ğŸ‡¬ Nigeria</option>
            <option value="EG">ğŸ‡ªğŸ‡¬ Egypt</option>
            <option value="KE">ğŸ‡°ğŸ‡ª Kenya</option>
            <option value="GH">ğŸ‡¬ğŸ‡­ Ghana</option>
            <option value="MA">ğŸ‡²ğŸ‡¦ Morocco</option>
            <option value="TN">ğŸ‡¹ğŸ‡³ Tunisia</option>
            <option value="DZ">ğŸ‡©ğŸ‡¿ Algeria</option>
            <option value="LY">ğŸ‡±ğŸ‡¾ Libya</option>
            <option value="SD">ğŸ‡¸ğŸ‡© Sudan</option>
            <option value="ET">ğŸ‡ªğŸ‡¹ Ethiopia</option>
            <option value="UG">ğŸ‡ºğŸ‡¬ Uganda</option>
            <option value="TZ">ğŸ‡¹ğŸ‡¿ Tanzania</option>
            <option value="RW">ğŸ‡·ğŸ‡¼ Rwanda</option>
            <option value="MW">ğŸ‡²ğŸ‡¼ Malawi</option>
            <option value="ZM">ğŸ‡¿ğŸ‡² Zambia</option>
            <option value="ZW">ğŸ‡¿ğŸ‡¼ Zimbabwe</option>
            <option value="BW">ğŸ‡§ğŸ‡¼ Botswana</option>
            <option value="NA">ğŸ‡³ğŸ‡¦ Namibia</option>
            <option value="LS">ğŸ‡±ğŸ‡¸ Lesotho</option>
            <option value="SZ">ğŸ‡¸ğŸ‡¿ Eswatini</option>
            <option value="MG">ğŸ‡²ğŸ‡¬ Madagascar</option>
            <option value="MU">ğŸ‡²ğŸ‡º Mauritius</option>
            <option value="SC">ğŸ‡¸ğŸ‡¨ Seychelles</option>
            <option value="RE">ğŸ‡·ğŸ‡ª RÃ©union</option>
            <option value="YT">ğŸ‡¾ğŸ‡¹ Mayotte</option>
            <option value="KM">ğŸ‡°ğŸ‡² Comoros</option>
            <option value="DJ">ğŸ‡©ğŸ‡¯ Djibouti</option>
            <option value="SO">ğŸ‡¸ğŸ‡´ Somalia</option>
            <option value="ER">ğŸ‡ªğŸ‡· Eritrea</option>
            <option value="CF">ğŸ‡¨ğŸ‡« Central African Republic</option>
            <option value="TD">ğŸ‡¹ğŸ‡© Chad</option>
            <option value="NE">ğŸ‡³ğŸ‡ª Niger</option>
            <option value="ML">ğŸ‡²ğŸ‡± Mali</option>
            <option value="BF">ğŸ‡§ğŸ‡« Burkina Faso</option>
            <option value="SN">ğŸ‡¸ğŸ‡³ Senegal</option>
            <option value="GM">ğŸ‡¬ğŸ‡² Gambia</option>
            <option value="GW">ğŸ‡¬ğŸ‡¼ Guinea-Bissau</option>
            <option value="GN">ğŸ‡¬ğŸ‡³ Guinea</option>
            <option value="SL">ğŸ‡¸ğŸ‡± Sierra Leone</option>
            <option value="LR">ğŸ‡±ğŸ‡· Liberia</option>
            <option value="CI">ğŸ‡¨ğŸ‡® CÃ´te d'Ivoire</option>
            <option value="GH">ğŸ‡¬ğŸ‡­ Ghana</option>
            <option value="TG">ğŸ‡¹ğŸ‡¬ Togo</option>
            <option value="BJ">ğŸ‡§ğŸ‡¯ Benin</option>
            <option value="CV">ğŸ‡¨ğŸ‡» Cape Verde</option>
            <option value="ST">ğŸ‡¸ğŸ‡¹ SÃ£o TomÃ© and PrÃ­ncipe</option>
            <option value="GQ">ğŸ‡¬ğŸ‡¶ Equatorial Guinea</option>
            <option value="GA">ğŸ‡¬ğŸ‡¦ Gabon</option>
            <option value="CG">ğŸ‡¨ğŸ‡¬ Republic of the Congo</option>
            <option value="CD">ğŸ‡¨ğŸ‡© Democratic Republic of the Congo</option>
            <option value="AO">ğŸ‡¦ğŸ‡´ Angola</option>
            <option value="CM">ğŸ‡¨ğŸ‡² Cameroon</option>
            <option value="CF">ğŸ‡¨ğŸ‡« Central African Republic</option>
            <option value="TD">ğŸ‡¹ğŸ‡© Chad</option>
            <option value="NE">ğŸ‡³ğŸ‡ª Niger</option>
            <option value="NG">ğŸ‡³ğŸ‡¬ Nigeria</option>
            <option value="SA">ğŸ‡¸ğŸ‡¦ Saudi Arabia</option>
            <option value="AE">ğŸ‡¦ğŸ‡ª United Arab Emirates</option>
            <option value="QA">ğŸ‡¶ğŸ‡¦ Qatar</option>
            <option value="KW">ğŸ‡°ğŸ‡¼ Kuwait</option>
            <option value="BH">ğŸ‡§ğŸ‡­ Bahrain</option>
            <option value="OM">ğŸ‡´ğŸ‡² Oman</option>
            <option value="YE">ğŸ‡¾ğŸ‡ª Yemen</option>
            <option value="IQ">ğŸ‡®ğŸ‡¶ Iraq</option>
            <option value="SY">ğŸ‡¸ğŸ‡¾ Syria</option>
            <option value="LB">ğŸ‡±ğŸ‡§ Lebanon</option>
            <option value="JO">ğŸ‡¯ğŸ‡´ Jordan</option>
            <option value="IL">ğŸ‡®ğŸ‡± Israel</option>
            <option value="PS">ğŸ‡µğŸ‡¸ Palestine</option>
            <option value="TR">ğŸ‡¹ğŸ‡· Turkey</option>
            <option value="CY">ğŸ‡¨ğŸ‡¾ Cyprus</option>
            <option value="GR">ğŸ‡¬ğŸ‡· Greece</option>
            <option value="BG">ğŸ‡§ğŸ‡¬ Bulgaria</option>
            <option value="RO">ğŸ‡·ğŸ‡´ Romania</option>
            <option value="MD">ğŸ‡²ğŸ‡© Moldova</option>
            <option value="UA">ğŸ‡ºğŸ‡¦ Ukraine</option>
            <option value="BY">ğŸ‡§ğŸ‡¾ Belarus</option>
            <option value="LT">ğŸ‡±ğŸ‡¹ Lithuania</option>
            <option value="LV">ğŸ‡±ğŸ‡» Latvia</option>
            <option value="EE">ğŸ‡ªğŸ‡ª Estonia</option>
            <option value="RU">ğŸ‡·ğŸ‡º Russia</option>
            <option value="KZ">ğŸ‡°ğŸ‡¿ Kazakhstan</option>
            <option value="UZ">ğŸ‡ºğŸ‡¿ Uzbekistan</option>
            <option value="TM">ğŸ‡¹ğŸ‡² Turkmenistan</option>
            <option value="TJ">ğŸ‡¹ğŸ‡¯ Tajikistan</option>
            <option value="KG">ğŸ‡°ğŸ‡¬ Kyrgyzstan</option>
            <option value="AF">ğŸ‡¦ğŸ‡« Afghanistan</option>
            <option value="PK">ğŸ‡µğŸ‡° Pakistan</option>
            <option value="BD">ğŸ‡§ğŸ‡© Bangladesh</option>
            <option value="LK">ğŸ‡±ğŸ‡° Sri Lanka</option>
            <option value="MV">ğŸ‡²ğŸ‡» Maldives</option>
            <option value="BT">ğŸ‡§ğŸ‡¹ Bhutan</option>
            <option value="NP">ğŸ‡³ğŸ‡µ Nepal</option>
            <option value="MM">ğŸ‡²ğŸ‡² Myanmar</option>
            <option value="TH">ğŸ‡¹ğŸ‡­ Thailand</option>
            <option value="LA">ğŸ‡±ğŸ‡¦ Laos</option>
            <option value="KH">ğŸ‡°ğŸ‡­ Cambodia</option>
            <option value="VN">ğŸ‡»ğŸ‡³ Vietnam</option>
            <option value="MY">ğŸ‡²ğŸ‡¾ Malaysia</option>
            <option value="BN">ğŸ‡§ğŸ‡³ Brunei</option>
            <option value="ID">ğŸ‡®ğŸ‡© Indonesia</option>
            <option value="PH">ğŸ‡µğŸ‡­ Philippines</option>
            <option value="TW">ğŸ‡¹ğŸ‡¼ Taiwan</option>
            <option value="MN">ğŸ‡²ğŸ‡³ Mongolia</option>
            <option value="KP">ğŸ‡°ğŸ‡µ North Korea</option>
            <option value="FJ">ğŸ‡«ğŸ‡¯ Fiji</option>
            <option value="PG">ğŸ‡µğŸ‡¬ Papua New Guinea</option>
            <option value="SB">ğŸ‡¸ğŸ‡§ Solomon Islands</option>
            <option value="VU">ğŸ‡»ğŸ‡º Vanuatu</option>
            <option value="NC">ğŸ‡³ğŸ‡¨ New Caledonia</option>
            <option value="PF">ğŸ‡µğŸ‡« French Polynesia</option>
            <option value="WS">ğŸ‡¼ğŸ‡¸ Samoa</option>
            <option value="TO">ğŸ‡¹ğŸ‡´ Tonga</option>
            <option value="KI">ğŸ‡°ğŸ‡® Kiribati</option>
            <option value="TV">ğŸ‡¹ğŸ‡» Tuvalu</option>
            <option value="NR">ğŸ‡³ğŸ‡· Nauru</option>
            <option value="PW">ğŸ‡µğŸ‡¼ Palau</option>
            <option value="MH">ğŸ‡²ğŸ‡­ Marshall Islands</option>
            <option value="FM">ğŸ‡«ğŸ‡² Micronesia</option>
            <option value="CK">ğŸ‡¨ğŸ‡° Cook Islands</option>
            <option value="NU">ğŸ‡³ğŸ‡º Niue</option>
            <option value="TK">ğŸ‡¹ğŸ‡° Tokelau</option>
            <option value="AS">ğŸ‡¦ğŸ‡¸ American Samoa</option>
            <option value="GU">ğŸ‡¬ğŸ‡º Guam</option>
            <option value="MP">ğŸ‡²ğŸ‡µ Northern Mariana Islands</option>
            <option value="PR">ğŸ‡µğŸ‡· Puerto Rico</option>
            <option value="VI">ğŸ‡»ğŸ‡® U.S. Virgin Islands</option>
            <option value="VG">ğŸ‡»ğŸ‡¬ British Virgin Islands</option>
            <option value="AI">ğŸ‡¦ğŸ‡® Anguilla</option>
            <option value="AG">ğŸ‡¦ğŸ‡¬ Antigua and Barbuda</option>
            <option value="DM">ğŸ‡©ğŸ‡² Dominica</option>
            <option value="GD">ğŸ‡¬ğŸ‡© Grenada</option>
            <option value="KN">ğŸ‡°ğŸ‡³ Saint Kitts and Nevis</option>
            <option value="LC">ğŸ‡±ğŸ‡¨ Saint Lucia</option>
            <option value="VC">ğŸ‡»ğŸ‡¨ Saint Vincent and the Grenadines</option>
            <option value="BB">ğŸ‡§ğŸ‡§ Barbados</option>
            <option value="TT">ğŸ‡¹ğŸ‡¹ Trinidad and Tobago</option>
            <option value="JM">ğŸ‡¯ğŸ‡² Jamaica</option>
            <option value="CU">ğŸ‡¨ğŸ‡º Cuba</option>
            <option value="HT">ğŸ‡­ğŸ‡¹ Haiti</option>
            <option value="DO">ğŸ‡©ğŸ‡´ Dominican Republic</option>
            <option value="GT">ğŸ‡¬ğŸ‡¹ Guatemala</option>
            <option value="BZ">ğŸ‡§ğŸ‡¿ Belize</option>
            <option value="SV">ğŸ‡¸ğŸ‡» El Salvador</option>
            <option value="HN">ğŸ‡­ğŸ‡³ Honduras</option>
            <option value="NI">ğŸ‡³ğŸ‡® Nicaragua</option>
            <option value="CR">ğŸ‡¨ğŸ‡· Costa Rica</option>
            <option value="PA">ğŸ‡µğŸ‡¦ Panama</option>
            <option value="GY">ğŸ‡¬ğŸ‡¾ Guyana</option>
            <option value="SR">ğŸ‡¸ğŸ‡· Suriname</option>
            <option value="GF">ğŸ‡¬ğŸ‡« French Guiana</option>
            <option value="VE">ğŸ‡»ğŸ‡ª Venezuela</option>
            <option value="BO">ğŸ‡§ğŸ‡´ Bolivia</option>
            <option value="PY">ğŸ‡µğŸ‡¾ Paraguay</option>
            <option value="UY">ğŸ‡ºğŸ‡¾ Uruguay</option>
            <option value="EC">ğŸ‡ªğŸ‡¨ Ecuador</option>
            <option value="IS">ğŸ‡®ğŸ‡¸ Iceland</option>
            <option value="GL">ğŸ‡¬ğŸ‡± Greenland</option>
            <option value="FO">ğŸ‡«ğŸ‡´ Faroe Islands</option>
            <option value="SJ">ğŸ‡¸ğŸ‡¯ Svalbard and Jan Mayen</option>
            <option value="AX">ğŸ‡¦ğŸ‡½ Ã…land Islands</option>
            <option value="AD">ğŸ‡¦ğŸ‡© Andorra</option>
            <option value="LI">ğŸ‡±ğŸ‡® Liechtenstein</option>
            <option value="MC">ğŸ‡²ğŸ‡¨ Monaco</option>
            <option value="SM">ğŸ‡¸ğŸ‡² San Marino</option>
            <option value="VA">ğŸ‡»ğŸ‡¦ Vatican City</option>
            <option value="MT">ğŸ‡²ğŸ‡¹ Malta</option>
            <option value="GI">ğŸ‡¬ğŸ‡® Gibraltar</option>
            <option value="IM">ğŸ‡®ğŸ‡² Isle of Man</option>
            <option value="JE">ğŸ‡¯ğŸ‡ª Jersey</option>
            <option value="GG">ğŸ‡¬ğŸ‡¬ Guernsey</option>
            <option value="FO">ğŸ‡«ğŸ‡´ Faroe Islands</option>
            <option value="GL">ğŸ‡¬ğŸ‡± Greenland</option>
            <option value="AQ">ğŸ‡¦ğŸ‡¶ Antarctica</option>
            <option value="BV">ğŸ‡§ğŸ‡» Bouvet Island</option>
            <option value="HM">ğŸ‡­ğŸ‡² Heard Island and McDonald Islands</option>
            <option value="TF">ğŸ‡¹ğŸ‡« French Southern Territories</option>
            <option value="GS">
              ğŸ‡¬ğŸ‡¸ South Georgia and the South Sandwich Islands
            </option>
            <option value="IO">ğŸ‡®ğŸ‡´ British Indian Ocean Territory</option>
            <option value="PN">ğŸ‡µğŸ‡³ Pitcairn Islands</option>
            <option value="SH">ğŸ‡¸ğŸ‡­ Saint Helena</option>
            <option value="AC">ğŸ‡¦ğŸ‡¨ Ascension Island</option>
            <option value="TA">ğŸ‡¹ğŸ‡¦ Tristan da Cunha</option>
          </select>
        );

      case "textarea":
        return (
          <Textarea
            {...commonProps}
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
            rows={4}
          />
        );

      case "number":
        return (
          <Input
            {...commonProps}
            type="number"
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
          />
        );

      case "date":
        return (
          <Input
            {...commonProps}
            type="date"
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
          />
        );

      case "select":
        return (
          <select
            {...commonProps}
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
            className="w-full px-3 py-2 border"
          >
            <option value="">Select an option</option>
            {field.options?.map((option: string, index: number) => (
              <option key={index} value={option}>
                {option}
              </option>
            ))}
          </select>
        );

      case "radio":
        return (
          <div className="space-y-2">
            {field.options?.map((option: string, index: number) => (
              <div key={index} className="flex items-center space-x-2">
                <input
                  type="radio"
                  id={`${field.id}-${index}`}
                  name={field.id}
                  value={option}
                  checked={formValues[field.id] === option}
                  onChange={(e) => handleInputChange(field.id, e.target.value)}
                  className="w-4 h-4"
                  style={{ accentColor: formData.theme.primaryColor }}
                />
                <Label
                  htmlFor={`${field.id}-${index}`}
                  className="text-sm"
                  style={{ color: formData.theme.textColor }}
                >
                  {option}
                </Label>
              </div>
            ))}
          </div>
        );

      case "checkbox":
        return (
          <div className="space-y-2">
            {field.options?.map((option: string, index: number) => (
              <div key={index} className="flex items-center space-x-2">
                <input
                  type="checkbox"
                  id={`${field.id}-${index}`}
                  checked={formValues[field.id]?.includes(option) || false}
                  onChange={(e) => {
                    const currentValues = formValues[field.id] || [];
                    if (e.target.checked) {
                      handleInputChange(field.id, [...currentValues, option]);
                    } else {
                      handleInputChange(
                        field.id,
                        currentValues.filter((v: string) => v !== option),
                      );
                    }
                  }}
                  className="w-4 h-4"
                  style={{ accentColor: formData.theme.primaryColor }}
                />
                <Label
                  htmlFor={`${field.id}-${index}`}
                  className="text-sm"
                  style={{ color: formData.theme.textColor }}
                >
                  {option}
                </Label>
              </div>
            ))}
          </div>
        );

      case "meeting":
        return (
          <MeetingTimePicker
            value={formValues[field.id] || ""}
            onChange={(datetime) => handleInputChange(field.id, datetime)}
            duration={field.meetingSettings?.duration || 30}
            bufferTime={field.meetingSettings?.bufferTime || 0}
            placeholder="Select date and time"
            className="w-full"
          />
        );

      default:
        return (
          <Input
            {...commonProps}
            value={formValues[field.id] || ""}
            onChange={(e) => handleInputChange(field.id, e.target.value)}
          />
        );
    }
  };

  if (submitStatus === "success") {
    return (
      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        className="text-center py-12"
      >
        <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <CheckCircle className="w-8 h-8 text-green-600" />
        </div>
        <h3 className="text-xl font-semibold text-foreground mb-2">
          Thank you!
        </h3>
        <p className="text-muted-foreground">
          {formData.settings.successMessage}
        </p>
      </motion.div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="w-full"
      style={{
        fontFamily: getFontFamily(formData.theme.fontFamily),
      }}
    >
      <div
        className="p-8 shadow-lg border"
        style={{
          borderRadius: `${formData.theme.borderRadius}px`,
          backgroundColor: formData.theme.backgroundColor,
          color: formData.theme.textColor,
          borderColor: formData.theme.textColor + "20", // 20% opacity
        }}
      >
        {formData.settings.showTitle && (
          <h1
            className="text-2xl font-bold mb-2"
            style={{ color: formData.theme.textColor }}
          >
            {formData.title}
          </h1>
        )}

        {formData.settings.showDescription && formData.description && (
          <p
            className="mb-6 opacity-75"
            style={{ color: formData.theme.textColor }}
          >
            {formData.description}
          </p>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          {formData.fields.map((field) => (
            <motion.div
              key={field.id}
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              className="space-y-2"
            >
              <Label
                htmlFor={field.id}
                className="text-sm font-medium"
                style={{ color: formData.theme.textColor }}
              >
                {field.label}
                {field.required && (
                  <span className="text-destructive ml-1">*</span>
                )}
              </Label>
              {renderField(field)}
            </motion.div>
          ))}

          <div className="pt-4">
            <button
              type="submit"
              disabled={isSubmitting}
              className="w-full px-4 py-3 font-medium transition-all hover:opacity-90"
              style={{
                backgroundColor: formData.theme.primaryColor,
                color: formData.theme.backgroundColor,
                borderRadius: `${formData.theme.borderRadius}px`,
              }}
            >
              {isSubmitting ? (
                <span className="flex items-center justify-center">
                  <div className="w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin mr-2" />
                  Submitting...
                </span>
              ) : (
                formData.settings.submitButtonText
              )}
            </button>
          </div>

          {submitStatus === "error" && (
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              className="flex items-center gap-2 text-destructive text-sm"
            >
              <AlertCircle className="w-4 h-4" />
              There was an error submitting the form. Please try again.
            </motion.div>
          )}
        </form>

        {/* Watermark */}
        {(formData.settings.showWatermark === undefined || formData.settings.showWatermark === true) && (
          <div className="flex items-center justify-center gap-2 mt-6 pt-6 border-t opacity-60 transition-opacity">
            <a
              href="https://shelfcue.com"
              target="_blank"
              rel="noopener noreferrer"
              className="flex items-center gap-1.5 group"
              style={{ fontFamily: 'Satoshi, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif' }}
            >
              <span className="text-xs text-foreground-muted">
                Powered by
              </span>
              <div className="flex items-center gap-1.5">
                <img
                  src="/1.png"
                  alt="ShelfCue"
                  className="w-4 h-4 object-contain"
                />
                <span
                  className="text-xs font-bold group-hover:underline"
                  style={{ color: formData.theme.textColor }}
                >
                  ShelfCue
                </span>
              </div>
            </a>
          </div>
        )}
      </div>
    </motion.div>
  );
}
